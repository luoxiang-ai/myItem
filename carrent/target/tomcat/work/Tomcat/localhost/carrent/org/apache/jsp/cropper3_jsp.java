/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-01-02 09:09:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cropper3_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Document</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/jquery_ext/cropper/cropper.min.css\">\r\n");
      out.write("</head>\r\n");
      out.write("<body style=\"margin-top: 50px;\">\r\n");
      out.write("<div class=\"box\">\r\n");
      out.write("    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/images/userface3.jpg\" id=\"image\" alt=\"图片失效\">\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"small\" style=\"width: 200px;height: 200px;overflow: hidden;\"></div>\r\n");
      out.write("<hr>\r\n");
      out.write("<button id=\"reset\">重置</button>\r\n");
      out.write("<button id=\"clear\">清除</button>\r\n");
      out.write("<button id=\"replace\">替换</button>\r\n");
      out.write("<button id=\"enable\">解锁</button>\r\n");
      out.write("<button id=\"disable\">锁定</button>\r\n");
      out.write("<button id=\"destory\">销毁</button>\r\n");
      out.write("\r\n");
      out.write("<button id=\"moveX\">移动x</button>\r\n");
      out.write("<button id=\"moveY\">移动y</button>\r\n");
      out.write("<button id=\"moveToX\">移动到x</button>\r\n");
      out.write("<button id=\"moveToY\">移动到y</button>\r\n");
      out.write("\r\n");
      out.write("<button id=\"zoom\">放大</button>\r\n");
      out.write("<button id=\"shrink\">缩小</button>\r\n");
      out.write("<button id=\"zoomTo\">放大到</button>\r\n");
      out.write("<button id=\"shrinkTo\">缩小到</button>\r\n");
      out.write("\r\n");
      out.write("<button id=\"rotateL\">逆时针旋转</button>\r\n");
      out.write("<button id=\"rotateR\">顺时针旋转</button>\r\n");
      out.write("<button id=\"rotateLTo\">逆时针旋转到</button>\r\n");
      out.write("<button id=\"rotateRTo\">顺时针旋转到</button>\r\n");
      out.write("\r\n");
      out.write("<button id=\"getData\">获取裁剪框数据</button>\r\n");
      out.write("<button id=\"setData\">设置裁剪框数据</button>\r\n");
      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write("<button id=\"getCroppedCanvas\">获取裁剪后的图片</button>\r\n");
      out.write("\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/js/jquery-3.4.1.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/jquery_ext/cropper/cropper.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("    var img = document.getElementById('image');\r\n");
      out.write("\r\n");
      out.write("    var cropper = new Cropper(img, {\r\n");
      out.write("        aspectRatio: 1/1,   //\r\n");
      out.write("        viewMode: 0, // 视图的模式\r\n");
      out.write("        preview: '.small', // 开启\r\n");
      out.write("        dragMode: 'move',\r\n");
      out.write("        guides: true,  // 是否显示裁剪的虚线\r\n");
      out.write("        modal: true,   // 是否开启遮罩层，将未选中的区域，暗色处理\r\n");
      out.write("        restore: true,\r\n");
      out.write("        zoomable: true,    // 是否允许缩放图片\r\n");
      out.write("        zoomOnTouch: true,   // 是否允许通过触摸的形式去放大缩小图片（移动端生效）\r\n");
      out.write("        zoomOnWheel: true,    // 是否允许使用鼠标来控制图片大小\r\n");
      out.write("        wheelZommRatio: 0.8,    // 设置鼠标控制缩放的比例\r\n");
      out.write("        cropBoxMovable: true,    // 是否可以移动裁剪框（如果设置成false，则鼠标控制图片移动来进行裁剪）\r\n");
      out.write("        // minContainerWidth: 0,\r\n");
      out.write("        // minContainerHeight: 500,\r\n");
      out.write("        // minCropBoxWidth: 0,\r\n");
      out.write("        // minCropBoxHeight: 100\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 重置剪裁区域的图片到初始状态\r\n");
      out.write("    $('#reset').on('click', function() {\r\n");
      out.write("        cropper.reset();\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 清空剪裁区域\r\n");
      out.write("    $('#clear').on('click', function() {\r\n");
      out.write("        cropper.clear();\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 替换图片\r\n");
      out.write("    $('#replace').on('click', function() {\r\n");
      out.write("        cropper.replace('img/bg2.jpg', false);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 使cropper可用（使锁定的裁剪框解锁）\r\n");
      out.write("    $('#enable').on('click', function() {\r\n");
      out.write("        cropper.enable();\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 冻结cropper（锁定裁剪框）\r\n");
      out.write("    $('#disable').on('click', function() {\r\n");
      out.write("        cropper.disable();\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 有问题\r\n");
      out.write("    $('#destory').on('click', function() {\r\n");
      out.write("        cropper.destory();\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 放大\r\n");
      out.write("    $('#zoom').on('click', function() {\r\n");
      out.write("        cropper.zoom(0.1);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 缩小\r\n");
      out.write("    $('#shrink').on('click', function() {\r\n");
      out.write("        cropper.zoom(-0.1);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 放大到\r\n");
      out.write("    $('#zoomTo').on('click', function() {\r\n");
      out.write("        cropper.zoomTo(2);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 缩小到\r\n");
      out.write("    $('#shrinkTo').on('click', function() {\r\n");
      out.write("        cropper.zoomTo(0.5);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 逆时针旋转\r\n");
      out.write("    $('#rotateL').on('click', function() {\r\n");
      out.write("        cropper.rotate(-10);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 顺时针旋转\r\n");
      out.write("    $('#rotateR').on('click', function() {\r\n");
      out.write("        cropper.rotate(10);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 逆时针旋转到\r\n");
      out.write("    $('#rotateLTo').on('click', function() {\r\n");
      out.write("        cropper.rotateTo(-90);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 顺时针旋转到\r\n");
      out.write("    $('#rotateRTo').on('click', function() {\r\n");
      out.write("        cropper.rotateTo(90);\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 获取裁剪框数据\r\n");
      out.write("    $('#getData').on('click', function() {\r\n");
      out.write("        console.log(cropper.getData());\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 设置裁剪框数据\r\n");
      out.write("    $('#setData').on('click', function() {\r\n");
      out.write("        cropper.setData({width: 50, height: 50});\r\n");
      out.write("    })\r\n");
      out.write("\r\n");
      out.write("    // 获取裁剪后的图片（重要）\r\n");
      out.write("    $('#getCroppedCanvas').on('click', function() {\r\n");
      out.write("        console.log(cropper.getCroppedCanvas().toDataURL('image/jpeg'));\r\n");
      out.write("    })\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
