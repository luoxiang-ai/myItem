/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2021-01-20 08:04:36 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages.system.workFlow;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class workFlowManager_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <meta charset=\"utf-8\">\r\n");
      out.write("        <title>流程管理</title>\r\n");
      out.write("        <meta name=\"renderer\" content=\"webkit\">\r\n");
      out.write("        <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\r\n");
      out.write("        <meta http-equiv=\"Access-Control-Allow-Origin\" content=\"*\">\r\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1\">\r\n");
      out.write("        <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\r\n");
      out.write("        <meta name=\"apple-mobile-web-app-capable\" content=\"yes\">\r\n");
      out.write("        <meta name=\"format-detection\" content=\"telephone=no\">\r\n");
      out.write("        <link rel=\"icon\" href=\"favicon.ico\">\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/layui/css/layui.css\" media=\"all\" />\r\n");
      out.write("        <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/css/public.css\" media=\"all\" />\r\n");
      out.write("    </head>\r\n");
      out.write("    <body class=\"childrenBody\">\r\n");
      out.write("        <!-- 搜索条件开始 -->\r\n");
      out.write("        <fieldset class=\"layui-elem-field layui-field-title\" style=\"margin-top: 20px;\">\r\n");
      out.write("            <legend>查询条件</legend>\r\n");
      out.write("        </fieldset>\r\n");
      out.write("        <form class=\"layui-form\" method=\"post\" id=\"searchFrm\">\r\n");
      out.write("            <div class=\"layui-form-item\">\r\n");
      out.write("                <div class=\"layui-col-md4\">\r\n");
      out.write("                    <label class=\"layui-form-label\">登陆帐号:</label>\r\n");
      out.write("                    <div class=\"layui-input-inline\">\r\n");
      out.write("                        <input type=\"text\" name=\"loginname\"  autocomplete=\"off\" class=\"layui-input\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"layui-col-md4\">\r\n");
      out.write("                    <label class=\"layui-form-label\">登陆IP:</label>\r\n");
      out.write("                    <div class=\"layui-input-inline\">\r\n");
      out.write("                        <input type=\"text\" name=\"loginip\"  autocomplete=\"off\" class=\"layui-input\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"layui-col-md4\">\r\n");
      out.write("                    <label class=\"layui-form-label\">登录时间:</label>\r\n");
      out.write("                    <div class=\"layui-input-inline\">\r\n");
      out.write("                        <input type=\"text\" name=\"logintime\" id=\"startTime\" readonly=\"readonly\"  autocomplete=\"off\" class=\"layui-input\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"layui-form-item\">\r\n");
      out.write("                <div class=\"layui-col-md2 layui-col-md-offset5\">\r\n");
      out.write("                    <button type=\"button\" class=\"layui-btn layui-btn-normal\" id=\"doSearch\">查询</button>\r\n");
      out.write("                    <button type=\"reset\" class=\"layui-btn layui-btn-warm\">重置</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("        <!-- 搜索条件结束 -->\r\n");
      out.write("\r\n");
      out.write("        <!-- 数据表格开始 -->\r\n");
      out.write("        <table class=\"layui-hide\" id=\"workFlowTable\" lay-filter=\"workFlowTable\"></table>\r\n");
      out.write("        <div style=\"display: none;\" id=\"workFlowToolBar\">\r\n");
      out.write("            <button type=\"button\" class=\"layui-btn layui-btn-sm\" lay-event=\"addProcessDefinition\">添加流程部署</button>\r\n");
      out.write("            <button type=\"button\" class=\"layui-btn layui-btn-danger layui-btn-sm\" lay-event=\"deleteBatch\">批量删除</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div  id=\"workFlowBar\" style=\"display: none;\">\r\n");
      out.write("            <a class=\"layui-btn layui-btn-xs\" lay-event=\"viewProcessImage\">查看流程图片</a>\r\n");
      out.write("            <a class=\"layui-btn layui-btn-danger layui-btn-xs\" lay-event=\"del\">删除</a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- 数据表格结束 -->\r\n");
      out.write("\r\n");
      out.write("        <!-- 流程部署开始 -->\r\n");
      out.write("        <div class=\"layui-row\" id=\"deployment\" style=\"display:none;\">\r\n");
      out.write("            <div class=\"layui-col-md10\">\r\n");
      out.write("                <div class=\"layui-block\">\r\n");
      out.write("                    <label class=\"layui-form-label\">部署名称：</label>\r\n");
      out.write("                    <div class=\"layui-input-block\">\r\n");
      out.write("                        <input type=\"text\" class=\"layui-input\" id=\"deploymentName\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"layui-block\">\r\n");
      out.write("                <button type=\"button\" class=\"layui-btn layui-btn-normal\" id=\"addProcessDefinition\">选择文件</button>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"layui-block\">\r\n");
      out.write("                <button type=\"button\" class=\"layui-btn\" id=\"start\">开始部署</button>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- 流程部署结束 -->\r\n");
      out.write("\r\n");
      out.write("        <!-- 查看流程图片开始 -->\r\n");
      out.write("        <div id=\"viewProcessImage\" sytle=\"display:none;\">\r\n");
      out.write("            <img src=\"\" id=\"processImage\" alt=\"图片无法加载\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- 查看流程图片结束 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/resources/layui/layui.js\"></script>\r\n");
      out.write("        <script type=\"text/javascript\">\r\n");
      out.write("            var tableIns;\r\n");
      out.write("            layui.use([ 'jquery', 'layer', 'form', 'table','laydate', 'upload'], function() {\r\n");
      out.write("                var $ = layui.jquery;\r\n");
      out.write("                var layer = layui.layer;\r\n");
      out.write("                var form = layui.form;\r\n");
      out.write("                var table = layui.table;\r\n");
      out.write("                var laydate=layui.laydate;\r\n");
      out.write("                var upload = layui.upload;\r\n");
      out.write("                //渲染时间\r\n");
      out.write("                laydate.render({\r\n");
      out.write("                    elem:'#startTime',\r\n");
      out.write("                    type:'datetime'\r\n");
      out.write("                });\r\n");
      out.write("                laydate.render({\r\n");
      out.write("                    elem:'#endTime',\r\n");
      out.write("                    type:'datetime'\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                //渲染数据表格\r\n");
      out.write("                tableIns=table.render({\r\n");
      out.write("                    elem: '#workFlowTable'   //渲染的目标对象\r\n");
      out.write("                    ,url:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/loadAllProcessDeployment.action' //数据接口\r\n");
      out.write("                    ,title: '流程部署表'//数据导出来的标题\r\n");
      out.write("                    ,toolbar:\"#workFlowToolBar\"   //表格的工具条\r\n");
      out.write("                    ,height:'full-150'\r\n");
      out.write("                    ,cellMinWidth:100 //设置列的最小默认宽度\r\n");
      out.write("                    ,limit: 10\r\n");
      out.write("                    ,page: true  //是否启用分页\r\n");
      out.write("                    ,cols: [[   //列表数据\r\n");
      out.write("                        {type: 'checkbox', fixed: 'left'}\r\n");
      out.write("                        ,{field:'id', title:'ID',align:'center'}\r\n");
      out.write("                        ,{field:'name', title:'部署名称',align:'center'}\r\n");
      out.write("                        ,{field:'category', title:'登录IP',align:'center'}\r\n");
      out.write("                        ,{field:'key', title: 'key', align: 'center'}\r\n");
      out.write("                        ,{field:'deploymentTime', title:'部署时间',align:'center'}\r\n");
      out.write("                        ,{fixed: 'right', title:'操作', toolbar: '#workFlowBar', width:220,align:'center'}\r\n");
      out.write("                    ]]\r\n");
      out.write("                    ,done: function(res, curr, count) {\r\n");
      out.write("                        // res：接口返回的信息\r\n");
      out.write("                        // curr：当前页码数\r\n");
      out.write("                        // count：数据总记录数\r\n");
      out.write("\r\n");
      out.write("                        // 如果不是第一页，并且数据量为0的情况下，就返回上一页\r\n");
      out.write("                        if(curr != 1 && res.data.length == 0) {\r\n");
      out.write("                            tableIns.reload({\r\n");
      out.write("                                page: {\r\n");
      out.write("                                    curr: curr - 1\r\n");
      out.write("                                }\r\n");
      out.write("                            })\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                })\r\n");
      out.write("                //模糊查询\r\n");
      out.write("                $(\"#doSearch\").click(function(){\r\n");
      out.write("                    var params=$(\"#searchFrm\").serialize();\r\n");
      out.write("                    tableIns.reload({\r\n");
      out.write("                        url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/loadAllWorkFlow.action?\"+params,\r\n");
      out.write("                        page:{curr:1}\r\n");
      out.write("\r\n");
      out.write("                    })\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                //监听头部工具栏事件\r\n");
      out.write("                table.on(\"toolbar(workFlowTable)\",function(obj){\r\n");
      out.write("                    switch(obj.event){\r\n");
      out.write("                        case 'deleteBatch':\r\n");
      out.write("                            deleteBatch();\r\n");
      out.write("                            break;\r\n");
      out.write("                        case 'addProcessDefinition':\r\n");
      out.write("                            addProcessDefinition();\r\n");
      out.write("                            break;\r\n");
      out.write("                    };\r\n");
      out.write("                })\r\n");
      out.write("                //监听行工具事件\r\n");
      out.write("                table.on('tool(workFlowTable)', function(obj){\r\n");
      out.write("                    var data = obj.data; //获得当前行数据\r\n");
      out.write("                    var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）\r\n");
      out.write("                    if(layEvent === 'del'){ //删除\r\n");
      out.write("                        console.log(data);\r\n");
      out.write("                        layer.confirm('确定删除【'+data.name+'】这个流程吗', function(index){\r\n");
      out.write("                            //向服务端发送删除指令\r\n");
      out.write("                            $.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/deleteWorkFlow.action\",{deploymentId:data.id},function(res){\r\n");
      out.write("                                // 提示信息\r\n");
      out.write("                                layer.msg(res.msg);\r\n");
      out.write("                                //刷新数据 表格\r\n");
      out.write("                                tableIns.reload();\r\n");
      out.write("                            })\r\n");
      out.write("                        });\r\n");
      out.write("                    } else if(layEvent === 'viewProcessImage') {\r\n");
      out.write("                        viewProcessImage(data);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("                //批量删除\r\n");
      out.write("                function deleteBatch(){\r\n");
      out.write("                    //得到选中的数据行\r\n");
      out.write("                    var checkStatus = table.checkStatus('workFlowTable');\r\n");
      out.write("                    var data = checkStatus.data;\r\n");
      out.write("                    var params=\"\";\r\n");
      out.write("                    $.each(data,function(i,item){\r\n");
      out.write("                        if(i==0){\r\n");
      out.write("                            params+=\"ids=\"+item.id;\r\n");
      out.write("                        }else{\r\n");
      out.write("                            params+=\"&ids=\"+item.id;\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                    layer.confirm('确定删除选中的这些工作流吗', function(index){\r\n");
      out.write("                        //向服务端发送删除指令\r\n");
      out.write("                        $.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/batchDeleteWorkFlow.action\",params,function(res){\r\n");
      out.write("                            layer.msg(res.msg);\r\n");
      out.write("                            //刷新数据 表格\r\n");
      out.write("                            tableIns.reload();\r\n");
      out.write("                        })\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                function addProcessDefinition() {\r\n");
      out.write("                    layer.open({\r\n");
      out.write("                        type:1,\r\n");
      out.write("                        title:'添加部署信息',\r\n");
      out.write("                        content:$(\"#deployment\"),\r\n");
      out.write("                        area:['400px','300px'],\r\n");
      out.write("                        success:function(index){\r\n");
      out.write("                            //清空表单数据\r\n");
      out.write("                            url=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/user/addUser.action\";\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                    //选完文件后不自动上传\r\n");
      out.write("                    upload.render({\r\n");
      out.write("                        elem: '#addProcessDefinition'\r\n");
      out.write("                        ,url: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/addWorkFlow.action'\r\n");
      out.write("                        ,auto: false\r\n");
      out.write("                        //,multiple: true\r\n");
      out.write("                        ,bindAction: '#start'\r\n");
      out.write("                        ,accept: 'file'\r\n");
      out.write("                        ,acceptMime: 'application/zip'\r\n");
      out.write("                        ,exts: 'zip'\r\n");
      out.write("                        ,size: 5024\r\n");
      out.write("                        ,field: 'mf'\r\n");
      out.write("                        ,done: function(res){\r\n");
      out.write("                            layer.msg('上传成功');\r\n");
      out.write("                            console.log(res)\r\n");
      out.write("                        }\r\n");
      out.write("                        ,data: {\r\n");
      out.write("                            deploymentName: function () {\r\n");
      out.write("                                return $('#deploymentName').val();\r\n");
      out.write("                            }\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                // 查看流程图片\r\n");
      out.write("                function viewProcessImage(data) {\r\n");
      out.write("                    console.log(data);\r\n");
      out.write("                    layer.open({\r\n");
      out.write("                        type: 1,\r\n");
      out.write("                        title:'正在要查看【' + data.name + '】流程图片',\r\n");
      out.write("                        content:$(\"#viewProcessImage\"),\r\n");
      out.write("                        area:['700px','400px'],\r\n");
      out.write("                        success:function(index){\r\n");
      out.write("                            $('#processImage').attr('src', '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/workFlow/viewProcessImage.action?deploymentId=' + data.id)\r\n");
      out.write("                        }\r\n");
      out.write("                    })\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        </script>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
