<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.java.carrent.mapper.BusCarMapper" >
  <resultMap id="BaseResultMap" type="com.java.carrent.entity.BusCar" >
    <id column="carnumber" property="carnumber" jdbcType="VARCHAR" />
    <result column="cartype" property="cartype" jdbcType="VARCHAR" />
    <result column="color" property="color" jdbcType="VARCHAR" />
    <result column="price" property="price" jdbcType="DOUBLE" />
    <result column="rentprice" property="rentprice" jdbcType="DOUBLE" />
    <result column="deposit" property="deposit" jdbcType="DOUBLE" />
    <result column="isrenting" property="isrenting" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="carimg" property="carimg" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    carnumber, cartype, color, price, rentprice, deposit, isrenting, description, carimg, 
    createtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.java.carrent.entity.BusCarExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bus_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bus_car
    where carnumber = #{carnumber,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bus_car
    where carnumber = #{carnumber,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.java.carrent.entity.BusCarExample" >
    delete from bus_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.java.carrent.entity.BusCar" >
    insert into bus_car (carnumber, cartype, color, 
      price, rentprice, deposit, 
      isrenting, description, carimg, 
      createtime)
    values (#{carnumber,jdbcType=VARCHAR}, #{cartype,jdbcType=VARCHAR}, #{color,jdbcType=VARCHAR}, 
      #{price,jdbcType=DOUBLE}, #{rentprice,jdbcType=DOUBLE}, #{deposit,jdbcType=DOUBLE}, 
      #{isrenting,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{carimg,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.java.carrent.entity.BusCar" >
    insert into bus_car
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="carnumber != null" >
        carnumber,
      </if>
      <if test="cartype != null" >
        cartype,
      </if>
      <if test="color != null" >
        color,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="rentprice != null" >
        rentprice,
      </if>
      <if test="deposit != null" >
        deposit,
      </if>
      <if test="isrenting != null" >
        isrenting,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="carimg != null" >
        carimg,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="carnumber != null" >
        #{carnumber,jdbcType=VARCHAR},
      </if>
      <if test="cartype != null" >
        #{cartype,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        #{color,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DOUBLE},
      </if>
      <if test="rentprice != null" >
        #{rentprice,jdbcType=DOUBLE},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=DOUBLE},
      </if>
      <if test="isrenting != null" >
        #{isrenting,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="carimg != null" >
        #{carimg,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.java.carrent.entity.BusCarExample" resultType="java.lang.Integer" >
    select count(*) from bus_car
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bus_car
    <set >
      <if test="record.carnumber != null" >
        carnumber = #{record.carnumber,jdbcType=VARCHAR},
      </if>
      <if test="record.cartype != null" >
        cartype = #{record.cartype,jdbcType=VARCHAR},
      </if>
      <if test="record.color != null" >
        color = #{record.color,jdbcType=VARCHAR},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=DOUBLE},
      </if>
      <if test="record.rentprice != null" >
        rentprice = #{record.rentprice,jdbcType=DOUBLE},
      </if>
      <if test="record.deposit != null" >
        deposit = #{record.deposit,jdbcType=DOUBLE},
      </if>
      <if test="record.isrenting != null" >
        isrenting = #{record.isrenting,jdbcType=INTEGER},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.carimg != null" >
        carimg = #{record.carimg,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bus_car
    set carnumber = #{record.carnumber,jdbcType=VARCHAR},
      cartype = #{record.cartype,jdbcType=VARCHAR},
      color = #{record.color,jdbcType=VARCHAR},
      price = #{record.price,jdbcType=DOUBLE},
      rentprice = #{record.rentprice,jdbcType=DOUBLE},
      deposit = #{record.deposit,jdbcType=DOUBLE},
      isrenting = #{record.isrenting,jdbcType=INTEGER},
      description = #{record.description,jdbcType=VARCHAR},
      carimg = #{record.carimg,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.java.carrent.entity.BusCar" >
    update bus_car
    <set >
      <if test="cartype != null" >
        cartype = #{cartype,jdbcType=VARCHAR},
      </if>
      <if test="color != null" >
        color = #{color,jdbcType=VARCHAR},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DOUBLE},
      </if>
      <if test="rentprice != null" >
        rentprice = #{rentprice,jdbcType=DOUBLE},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=DOUBLE},
      </if>
      <if test="isrenting != null" >
        isrenting = #{isrenting,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="carimg != null" >
        carimg = #{carimg,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where carnumber = #{carnumber,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.java.carrent.entity.BusCar" >
    update bus_car
    set cartype = #{cartype,jdbcType=VARCHAR},
      color = #{color,jdbcType=VARCHAR},
      price = #{price,jdbcType=DOUBLE},
      rentprice = #{rentprice,jdbcType=DOUBLE},
      deposit = #{deposit,jdbcType=DOUBLE},
      isrenting = #{isrenting,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      carimg = #{carimg,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where carnumber = #{carnumber,jdbcType=VARCHAR}
  </update>

  <!-- 模糊查询汽车信息 -->
  <select id="fuzzyQueryCar" resultMap="BaseResultMap">
    SELECT * FROM bus_car
    <where>
      <if test="carnumber != null and carnumber != ''">
        carnumber LIKE CONCAT('%', #{carnumber}, '%')
      </if>
      <if test="cartype != null and cartype != ''">
        AND cartype LIKE CONCAT('%', #{cartype}, '%')
      </if>
      <if test="color != null and color != ''">
        AND color LIKE CONCAT('%', #{color}, '%')
      </if>
      <if test="description != null and description != ''">
        AND description LIKE CONCAT('%', #{description}, '%')
      </if>
      <if test="endTime != null and endTime != ''">
        AND createtime <![CDATA[<=]]> #{endTime}
      </if>
      <if test="startTime != null and startTime != ''">
        AND createtime >= #{startTime}
      </if>
    </where>
  </select>
</mapper>